plugins {
    id 'java'
}

ConfigurableFileTree libsImplementation = fileTree(dir: 'libs-implementation', include: ['*.jar'])

group = 'com.github.ipecter.rtu'
version = '1.3.2'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url = "https://repo.codemc.io/repository/nms/" }

}

configurations {
    extraLibs
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.19.2-R0.1-SNAPSHOT'

    extraLibs project(':NMS')
    //extraLibs project(':NMS_1_17_R1')
    extraLibs project(':NMS_1_18_R1')
    extraLibs project(':NMS_1_18_R2')
    extraLibs project(':NMS_1_19_R1')
    //extraLibs project(':NMS_1_20_R1')
    extraLibs libsImplementation

    implementation project(':NMS')
    //implementation project(':NMS_1_17_R1')
    implementation project(':NMS_1_18_R1')
    implementation project(':NMS_1_18_R2')
    implementation project(':NMS_1_19_R1')
    //implementation project(':NMS_1_20_R1')
    implementation libsImplementation
}
def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}